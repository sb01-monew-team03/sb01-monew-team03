plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'team03'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // DB
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // API
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // Lombok, Mapstruct 연동(mapsturct 빌드 시 lombok과 충돌 이슈 해결)
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // 문자열 유틸
    implementation 'org.apache.commons:commons-text:1.12.0'

    // QueryDSL - 수정된 부분
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    // 다음 두 개 의존성을 명시적으로 추가
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.673'

    // dotenv
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {

    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
    // 어노테이션 프로세서가 JPA 엔티티를 인식하도록 설정
    options.annotationProcessorPath = configurations.annotationProcessor
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test // 테스트가 먼저 실행되어야 리포트 생성 가능

    reports {
        xml.required = true
        html.required = true
    }
}

clean {
    delete file(querydslDir)
}