plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'team03'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// DB
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// API
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Mapstruct
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	// Lombok, Mapstruct 연동(mapsturct 빌드 시 lombok과 충돌 이슈 해결)
	// https://mvnrepository.com/artifact/org.projectlombok/lombok-mapstruct-binding
	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// 문자열 유틸
	// https://mvnrepository.com/artifact/org.apache.commons/commons-text
	implementation 'org.apache.commons:commons-text:1.12.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "${layout.buildDirectory.get()}/generated/querydsl"

sourceSets {
	main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory = layout.buildDirectory.dir("generated/querydsl")
}

clean.doLast {
	file(querydslDir).deleteDir()
}
